"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const filter_changed_packages_1 = require("./filter-changed-packages");
describe('filterChangedPackages', () => {
    it('should filter only the right package', () => __awaiter(this, void 0, void 0, function* () {
        const res = filter_changed_packages_1.filterChangedPackages(['packages/a/e.ts', 'packages/c/e.ts'], { a: 'a', b: 'b' }, 'packages');
        expect(res).toEqual(['a']);
    }));
    it('should filter out all packages if no package match is found', () => __awaiter(this, void 0, void 0, function* () {
        const res = filter_changed_packages_1.filterChangedPackages(['packages2/c/example.ts'], { a: 'a', b: 'b' }, 'packages2');
        expect(res).toEqual([]);
    }));
});
//# sourceMappingURL=filter-changed-packages.spec.js.map