"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const rev_deps_1 = require("./rev-deps");
describe('expandRevDeps', () => {
    it('should return empty array when no packages are supplied', () => __awaiter(this, void 0, void 0, function* () {
        const res = rev_deps_1.expandRevDeps([], [{ name: 'a' }, { name: 'b' }]);
        expect(res).toEqual([]);
    }));
    it('should return the same packages if no matches are found', () => __awaiter(this, void 0, void 0, function* () {
        const res = rev_deps_1.expandRevDeps(['c'], [{ name: 'a' }, { name: 'b' }]);
        expect(res).toEqual(['c']);
    }));
    it('should return the original list plus the proper reverse dependencies', () => __awaiter(this, void 0, void 0, function* () {
        const res = rev_deps_1.expandRevDeps(['c'], [
            {
                name: 'a',
                dependencies: {
                    c: '*'
                }
            },
            {
                name: 'b',
                devDependencies: {
                    c: '*'
                }
            },
            {
                name: 'd'
            }
        ]);
        expect(res).toEqual(['c', 'a', 'b']);
    }));
});
//# sourceMappingURL=rev-deps.spec.js.map